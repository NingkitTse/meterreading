package com.wasion.meterreading.util;

/**
 * 帧数据解析工具类
 * 
 * @author w24882 xieningjie
 * @date 2019年11月01日
 */
public class ParseUtil {

	private ParseUtil instance = null;
	private Object lock = new Object();

	public ParseUtil() {
	}

	public ParseUtil getInstance() {
		if (null == instance) {
			synchronized (lock) {
				if (null == instance) {
					instance = new ParseUtil();
				}
			}
		}
		return instance;
	}

	/**
	 * HEX码转Integer
	 * 
	 * @param str
	 * @return
	 * @author w24882 xieningjie
	 * @date 2019年12月6日
	 */
	public static Integer hexToInt(String str) {
		char[] ch = str.toCharArray();
		String res = "";
		for (int i = 0; i < ch.length; i += 2) {
			res += Integer.parseInt("" + ch[i] + ch[i + 1], 16);
		}
		return Integer.parseInt(res);
	}

	/**
	 * 整形转Hex码，自动在前面补0
	 * 
	 * @param numStr
	 *            Int值
	 * @param len
	 *            Hex码长度
	 * @return Hex码
	 */
	public static String intToHex(String numStr, int len) {
		String hexString = "00000000000000000000000000" + Integer.toHexString(Integer.parseInt(numStr));
		return hexString.substring(hexString.length() - len);
	}

	/**
	 * 整形转Hex码，自动在前面补0
	 * 
	 * @param str
	 *            Int值
	 * @param len
	 *            Hex码长度
	 * @return Hex码
	 */
	public static String intToHex(Integer num, int len) {
		String hexString = "00000000000000000000000000" + Integer.toHexString(num);
		return hexString.substring(hexString.length() - len);
	}

	/**
	 * 将长度为4的Bcd 转换为带符号的数字，第一位为符号位
	 * 
	 * @param str
	 * @return
	 */
	public static Integer bcdToSignedInt(String str) {
		if (str.length() != 4) {
			return hexToInt(str);
		}
		String str1 = bcdToString(str);
		int value = Integer.parseInt(str1, 16);
		int sign = value >> 15;
		if (sign == 1) { // 负数 取非符号位的补码+1作为值
			return -((~(value & 0x7fff) & 0x7fff) + 1);
		} else {
			return value;
		}
	}

	public static Double hexToDoulbe(String str) {
		return Long.parseLong(bcdToString(str), 16) / 1000.0;
	}

	public static Double bcdToDoulbe(String str) {
		return Double.parseDouble(bcdToString(str)) / 1000.0;
	}

	/**
	 * BCD码（以字节为单位的逆序字符串）转为原字符串
	 * <p>
	 * 样例：<br>
	 * 001606121920 -> 201912061600
	 * </p>
	 * 
	 * @param str
	 *            BCD码
	 * @return 原字符串
	 * @author w24882 xieningjie
	 * @date 2019年12月6日
	 */
	public static String bcdToString(String str) {
		char[] ch = str.toCharArray();
		String res = "";
		for (int i = ch.length - 2; i >= 0; i -= 2) {
			res += "" + ch[i] + ch[i + 1];
		}
		return res;
	}

	/**
	 * 普通字符串转bcd码，与bcd转String同理
	 * 
	 * @param str
	 *            普通string
	 * @return bcd码
	 */
	public static String stringToBcd(String str) {
		return bcdToString(str);
	}

	/**
	 * 计算HEX字符串校验和
	 * 
	 * @param hexStr
	 *            HEX字符串
	 * @return HEX字符串校验和
	 * @author w24882 xieningjie
	 * @date 2019年12月6日
	 */
	public static String calcChecksum(String hexStr) {
		char[] ch = hexStr.toCharArray();
		int checkSum = 0;
		for (int i = 0; i < ch.length; i += 2) {
			checkSum += Integer.parseInt("" + ch[i] + ch[i + 1], 16) & 0xff;
		}
		checkSum &= 0xff;
		return intToHex(checkSum, 2).toUpperCase();
	}

	public static void main(String[] args) {
		// 92
		// System.out.println(calcChecksum("6810595650221804000105CEEC011C00"));
		System.out.println(calcChecksum("6810595650221804000105CEEC011C00"));
		System.out.println(Integer.toHexString(127));
		System.out.println(Integer.toHexString(8080));
		System.out.println(Integer.toHexString(8080));
	}

}
